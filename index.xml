<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Telen's Blog</title><link>https://blog.nelettech.com/</link><description>Recent content on Telen's Blog</description><generator>Hugo -- 0.145.0</generator><language>en</language><lastBuildDate>Thu, 10 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.nelettech.com/index.xml" rel="self" type="application/rss+xml"/><item><title>How to get files from Azure blob to SharePoint via Power Automate</title><link>https://blog.nelettech.com/posts/2025/07/how-to-get-files-from-azure-blob/</link><pubDate>Thu, 10 Jul 2025 00:00:00 +0000</pubDate><guid>https://blog.nelettech.com/posts/2025/07/how-to-get-files-from-azure-blob/</guid><description>&lt;p>Sometimes you may want to get file from Azure Blob to your SharePoint Document library.&lt;/p>
&lt;p>I will demonstrate a minimal Power Automate flow to achieve that.&lt;/p>
&lt;p>Before you take action, make sure you have Azure blob account and proper access right.&lt;/p>
&lt;p>Assume I have one root container, and two sub folders within it.&lt;/p>
&lt;h2 id="initialize-variables-for-blob-account-and-the-root-container">Initialize variables for Blob account and the root container.&lt;/h2>
&lt;p>&lt;img alt="image-20250710154141347" loading="lazy" src="https://blog.nelettech.com/image-20250710154141347.png">&lt;/p>
&lt;p>&lt;img alt="image-20250710154159603" loading="lazy" src="https://blog.nelettech.com/image-20250710154159603.png">&lt;/p>
&lt;h2 id="add-lists-blobs-v2">Add Lists blobs (V2).&lt;/h2>
&lt;p>&lt;img alt="image-20250710154231293" loading="lazy" src="https://blog.nelettech.com/image-20250710154231293.png">&lt;/p>
&lt;h2 id="add-for-each">Add For each.&lt;/h2>
&lt;p>Select an output from previous steps = &lt;code>@outputs('Lists_blobs_(V2)')?['body/value']&lt;/code>.&lt;/p></description></item><item><title>How to handle empty object for ParseJSON in Power Automate</title><link>https://blog.nelettech.com/posts/2025/07/how-to-handle-empty-for-parsejson/</link><pubDate>Wed, 02 Jul 2025 00:00:00 +0000</pubDate><guid>https://blog.nelettech.com/posts/2025/07/how-to-handle-empty-for-parsejson/</guid><description>&lt;p>Occasionally, while building a Power Automate flow, you’ll need your &lt;strong>&lt;code>ParseJSON&lt;/code>&lt;/strong> action to accept an &lt;em>empty&lt;/em> value—whether that value is an object (&lt;code>{}&lt;/code>), array (&lt;code>[]&lt;/code>), or string (&lt;code>&amp;quot;&amp;quot;&lt;/code>). By default, ParseJSON balks at these inputs. So how do we get around that limitation?&lt;/p>
&lt;p>In this article, I’ll explore a simple, reliable approach that lets your flow handle empty JSON values gracefully.&lt;/p>
&lt;h3 id="create-manually-trigger-a-flow">Create Manually trigger a flow.&lt;/h3>
&lt;h3 id="add-initialize-variable-action">Add Initialize variable action.&lt;/h3>
&lt;p>Name: theEmpty.&lt;/p></description></item><item><title>Power Automate: Troubleshooting for connecting to local PostgreSQL (requires Npqsql 4.0.17.0 to be installed)</title><link>https://blog.nelettech.com/posts/2025/06/powerautomate-postgresql/</link><pubDate>Wed, 18 Jun 2025 00:00:00 +0000</pubDate><guid>https://blog.nelettech.com/posts/2025/06/powerautomate-postgresql/</guid><description>&lt;p>Recently, when using Power Automate to connect to PostgreSQL 17 through a local gateway, it prompted me to install Npqsql 4.0.17.0 or earlier.&lt;/p>
&lt;p>&lt;img loading="lazy" src="https://blog.nelettech.com/Screenshot2025-06-01125642.png">&lt;/p>
&lt;p>I installed 4.0.17.0 as prompted, but still got the same error. I also replaced all the DLL files under the local gateway program. Nothing helped.&lt;/p>
&lt;p>The similar cases can be traced several years ago, most of them were for Power BI topic with PostgreSQL.&lt;/p>
&lt;p>I checked the official website:&lt;/p></description></item><item><title>Power Canvas App: Looping marquee text</title><link>https://blog.nelettech.com/posts/2025/06/powerappslooping-marquee-text/</link><pubDate>Sat, 14 Jun 2025 10:00:00 +0200</pubDate><guid>https://blog.nelettech.com/posts/2025/06/powerappslooping-marquee-text/</guid><description>&lt;p>Ever wanted to add dynamic content to your Power Apps to highlight key information?&lt;/p>
&lt;p>This article I will explorer an approach for looping marquee text for a text input control.&lt;/p>
&lt;p>The demonstration use Authoring Version: 3.25061.7,and enabled &amp;lsquo;Modern controls and themes&amp;rsquo;.&lt;/p>
&lt;p>&lt;img alt="image-20250614154416783" loading="lazy" src="https://blog.nelettech.com/image-20250614154416783.png">&lt;/p>
&lt;p>Effect first:&lt;/p>
&lt;p>&lt;img loading="lazy" src="https://blog.nelettech.com/loopingmarquee3.gif">&lt;/p>
&lt;p>Prepare the app.&lt;/p>
&lt;h3 id="1-insert-controls-in-a-blank-screen">1. Insert controls in a blank screen：&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>One text label control: TextCanvas1&lt;/p>
&lt;p>Text= &lt;code>&amp;quot;While Montaigne's philosophy was admired and copied in France, none of his most immediate disciples tried to write essays.&amp;quot;&lt;/code>&lt;/p></description></item><item><title>Power Automate: SharePoint List to populate Word Template</title><link>https://blog.nelettech.com/posts/2025/06/listpopulatewordtemplate/</link><pubDate>Fri, 06 Jun 2025 10:00:00 +0200</pubDate><guid>https://blog.nelettech.com/posts/2025/06/listpopulatewordtemplate/</guid><description>&lt;p>In many organizations, creating standardized documents populated with up-to-date data can be both time-consuming and error-prone. By leveraging Power Automate to pull information directly from a SharePoint list and inject it into a Word template, you can eliminate manual copy-and-paste steps, ensure consistency, and accelerate your document-generation process. In this article, we’ll walk through how to build a flow that retrieves list items, maps fields to placeholders in a Word template, and outputs a fully formatted document—seamlessly bridging SharePoint data with professional Word reports.&lt;/p></description></item><item><title>Power Automate: Filter Emails Which Have No Category</title><link>https://blog.nelettech.com/posts/2025/05/how-to-filter-email-category/</link><pubDate>Sat, 24 May 2025 00:00:00 +0000</pubDate><guid>https://blog.nelettech.com/posts/2025/05/how-to-filter-email-category/</guid><description>&lt;h3 id="in-this-article-i-want-to-show-you-how-to-filter-no-category-email-in-outlook-via-power-automate">In this Article I want to show you how to filter no category email in outlook via Power Automate.&lt;/h3>
&lt;p>In current Outlook 365 connector, there is no option to filter out emails with/without categories.&lt;/p>
&lt;p>When I tried to build the flow, I thought I could use &lt;code>Get emails (V3)&lt;/code>. After I tried I realised that there is no info in the body, but it doesn&amp;rsquo;t have the categories information, and the &lt;code>most important thing is it may consume more API if I use it first&lt;/code>.&lt;/p></description></item><item><title>How to use combined filter panel in Power Apps</title><link>https://blog.nelettech.com/posts/2025/04/10/combinedfilterpowerapps/</link><pubDate>Wed, 09 Apr 2025 10:00:00 -0400</pubDate><guid>https://blog.nelettech.com/posts/2025/04/10/combinedfilterpowerapps/</guid><description>&lt;h4 id="in-this-article-i-want-to-explore-a-way-to-use-combined-filter-controls-and-pass-the-values-to-dataset">In this article, I want to explore a way to use combined filter controls and pass the values to dataset.&lt;/h4>
&lt;p>I used Accounts(Sample data)table for the demostration, you can use your own data if you&amp;rsquo;d like.&lt;/p>
&lt;h5 id="control-list">Control list.&lt;/h5>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Control&lt;/th>
&lt;th>Refer to&lt;/th>
&lt;th>Source Data&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ComBox&lt;/td>
&lt;td>Business Type&lt;/td>
&lt;td>Account&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Toggle&lt;/td>
&lt;td>Credit Hold&lt;/td>
&lt;td>Account&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DropDown(Preview)&lt;/td>
&lt;td>Relationship Type&lt;/td>
&lt;td>Account&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Reset&lt;/td>
&lt;td>Reset All conrols&lt;/td>
&lt;td>n/a&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Table(preview)&lt;/td>
&lt;td>collection&lt;/td>
&lt;td>Account&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>The layout will be like this screen shot.&lt;/p></description></item><item><title>The limitations of TRIM() in T‑SQL when cleaning/migrating data</title><link>https://blog.nelettech.com/posts/2025/04/migrating_data/</link><pubDate>Sat, 22 Feb 2025 20:33:00 +0000</pubDate><guid>https://blog.nelettech.com/posts/2025/04/migrating_data/</guid><description>&lt;p>&lt;strong>In T-SQL&lt;/strong>, the &lt;strong>TRIM()&lt;/strong> function only removes spaces (ASCII 32) and cannot remove hidden characters (such as newline characters, carriage returns, tabs, or some emojis). These characters might cause issues during data cleaning (or migration), for example:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Data imported may contain carriage return (CHAR(13)) or newline (CHAR(10)).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Data copied and pasted may contain tab characters (CHAR(9)).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Specially formatted strings may contain invisible Unicode control characters, such as certain emojis.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Common hidden characters include:&lt;/p></description></item><item><title/><link>https://blog.nelettech.com/archives/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://blog.nelettech.com/archives/</guid><description/></item></channel></rss>