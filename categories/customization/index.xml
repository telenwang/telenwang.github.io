<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Customization on Telen's Blog</title><link>https://blog.nelettech.com/categories/customization/</link><description>Recent content in Customization on Telen's Blog</description><generator>Hugo -- 0.145.0</generator><language>en</language><lastBuildDate>Sun, 03 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.nelettech.com/categories/customization/index.xml" rel="self" type="application/rss+xml"/><item><title>How to change PCF local port number(8181)</title><link>https://blog.nelettech.com/posts/2025/08/how-to-change-pcf-local-port-number.md/</link><pubDate>Sun, 03 Aug 2025 00:00:00 +0000</pubDate><guid>https://blog.nelettech.com/posts/2025/08/how-to-change-pcf-local-port-number.md/</guid><description>&lt;p>You might have noticed that when you tested your PCF component locally, npm always used port number:8181 as default.&lt;/p>
&lt;p>Is that possible to change a different one ? and How?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-cmd" data-lang="cmd">&lt;span class="line">&lt;span class="cl">[start] Initializing...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[start] Validating manifest...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[start] Validating control...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[start] Generating manifest types...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Starting control harness...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Browsersync] Access URLs:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ----------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Local: http://localhost:8181
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ----------------------------
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Browsersync] Serving files from: C:\projects\LinearInput\out\controls\LinearInputControl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Browsersync] Watching files...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The short answer is Yes if that really bothers you.&lt;/p></description></item><item><title>How to handle empty object for ParseJSON in Power Automate</title><link>https://blog.nelettech.com/posts/2025/07/how-to-handle-empty-for-parsejson/</link><pubDate>Wed, 02 Jul 2025 00:00:00 +0000</pubDate><guid>https://blog.nelettech.com/posts/2025/07/how-to-handle-empty-for-parsejson/</guid><description>&lt;p>Occasionally, while building a Power Automate flow, you’ll need your &lt;strong>&lt;code>ParseJSON&lt;/code>&lt;/strong> action to accept an &lt;em>empty&lt;/em> value—whether that value is an object (&lt;code>{}&lt;/code>), array (&lt;code>[]&lt;/code>), or string (&lt;code>&amp;quot;&amp;quot;&lt;/code>). By default, ParseJSON balks at these inputs. So how do we get around that limitation?&lt;/p>
&lt;p>In this article, I’ll explore a simple, reliable approach that lets your flow handle empty JSON values gracefully.&lt;/p>
&lt;h3 id="create-manually-trigger-a-flow">Create Manually trigger a flow.&lt;/h3>
&lt;h3 id="add-initialize-variable-action">Add Initialize variable action.&lt;/h3>
&lt;p>Name: theEmpty.&lt;/p></description></item></channel></rss>