<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Power Automate on Telen's Blog</title><link>https://blog.nelettech.com/tags/power-automate/</link><description>Recent content in Power Automate on Telen's Blog</description><generator>Hugo -- 0.145.0</generator><language>en</language><lastBuildDate>Wed, 02 Jul 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.nelettech.com/tags/power-automate/index.xml" rel="self" type="application/rss+xml"/><item><title>How to handle empty object for ParseJSON in Power Automate</title><link>https://blog.nelettech.com/posts/2025/07/how-to-handle-empty-for-parsejson/</link><pubDate>Wed, 02 Jul 2025 00:00:00 +0000</pubDate><guid>https://blog.nelettech.com/posts/2025/07/how-to-handle-empty-for-parsejson/</guid><description>&lt;p>Occasionally, while building a Power Automate flow, you’ll need your &lt;strong>&lt;code>ParseJSON&lt;/code>&lt;/strong> action to accept an &lt;em>empty&lt;/em> value—whether that value is an object (&lt;code>{}&lt;/code>), array (&lt;code>[]&lt;/code>), or string (&lt;code>&amp;quot;&amp;quot;&lt;/code>). By default, ParseJSON balks at these inputs. So how do we get around that limitation?&lt;/p>
&lt;p>In this article, I’ll explore a simple, reliable approach that lets your flow handle empty JSON values gracefully.&lt;/p>
&lt;h3 id="create-manually-trigger-a-flow">Create Manually trigger a flow.&lt;/h3>
&lt;h3 id="add-initialize-variable-action">Add Initialize variable action.&lt;/h3>
&lt;p>Name: theEmpty.&lt;/p></description></item><item><title>Power Automate: Troubleshooting for connecting to local PostgreSQL (requires Npqsql 4.0.17.0 to be installed)</title><link>https://blog.nelettech.com/posts/2025/06/powerautomate-postgresql/</link><pubDate>Wed, 18 Jun 2025 00:00:00 +0000</pubDate><guid>https://blog.nelettech.com/posts/2025/06/powerautomate-postgresql/</guid><description>&lt;p>Recently, when using Power Automate to connect to PostgreSQL 17 through a local gateway, it prompted me to install Npqsql 4.0.17.0 or earlier.&lt;/p>
&lt;p>&lt;img loading="lazy" src="https://blog.nelettech.com/Screenshot2025-06-01125642.png">&lt;/p>
&lt;p>I installed 4.0.17.0 as prompted, but still got the same error. I also replaced all the DLL files under the local gateway program. Nothing helped.&lt;/p>
&lt;p>The similar cases can be traced several years ago, most of them were for Power BI topic with PostgreSQL.&lt;/p>
&lt;p>I checked the official website:&lt;/p></description></item><item><title>Power Automate: SharePoint List to populate Word Template</title><link>https://blog.nelettech.com/posts/2025/06/listpopulatewordtemplate/</link><pubDate>Fri, 06 Jun 2025 10:00:00 +0200</pubDate><guid>https://blog.nelettech.com/posts/2025/06/listpopulatewordtemplate/</guid><description>&lt;p>In many organizations, creating standardized documents populated with up-to-date data can be both time-consuming and error-prone. By leveraging Power Automate to pull information directly from a SharePoint list and inject it into a Word template, you can eliminate manual copy-and-paste steps, ensure consistency, and accelerate your document-generation process. In this article, we’ll walk through how to build a flow that retrieves list items, maps fields to placeholders in a Word template, and outputs a fully formatted document—seamlessly bridging SharePoint data with professional Word reports.&lt;/p></description></item></channel></rss>